// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace BoggleClientTest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod1 - Use 'RecordedMethod1Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WinButton uIItem2Button = this.UIClientSpawnerWindow.UIItem2Window.UIItem2Button;
            WinEdit uIPlayerNameTextBoxEdit = this.UIBoggleWindow.UIPlayerNameTextBoxWindow.UIPlayerNameTextBoxEdit;
            WinButton uIPlayButton = this.UIBoggleWindow.UIPlayWindow.UIPlayButton;
            WinButton uIDisconnectButton = this.UIBoggleWindow.UIDisconnectWindow.UIDisconnectButton;
            WinEdit uIPlayerNameTextBoxEdit1 = this.UIBoggleWindow1.UIPlayerNameTextBoxWindow.UIPlayerNameTextBoxEdit;
            WinEdit uIGuessWordTextBoxEdit = this.UIBoggleWindow.UIGuessWordTextBoxWindow.UIGuessWordTextBoxEdit;
            WinEdit uIGuessWordTextBoxEdit1 = this.UIBoggleWindow1.UIGuessWordTextBoxWindow.UIGuessWordTextBoxEdit;
            WinEdit uIMyLegalWordTextBoxEdit = this.UIBoggleWindow1.UIMyLegalWordTextBoxWindow.UIMyLegalWordTextBoxEdit;
            WinButton uIWelcomeScreenButton = this.UIBoggleWindow.UIWelcomeScreenWindow.UIWelcomeScreenButton;
            WinButton uIWelcomeScreenButton1 = this.UIBoggleWindow1.UIWelcomeScreenWindow.UIWelcomeScreenButton;
            WinButton uIPlayButton1 = this.UIBoggleWindow1.UIPlayWindow.UIPlayButton;
            WinButton uICloseButton = this.UIBoggleWindow.UIBoggleTitleBar.UICloseButton;
            WinButton uIItem1Button = this.UIClientSpawnerWindow.UIItem1Window.UIItem1Button;
            WinButton uICloseButton1 = this.UICUsersUserDocumentsVWindow.UICUsersUserDocumentsVTitleBar.UICloseButton;
            WinButton uIOKButton = this.UIOKWindow.UIOKButton;
            WinButton uICloseButton2 = this.UIClientSpawnerWindow.UIClientSpawnerTitleBar.UICloseButton;
            #endregion

            // Launch '%VisualStudioDir%\Projects\PS9\ClientSpawner\bin\Debug\PS8.exe' with arguments '15 ..\..\..\dictionary.txt AOHUINHRTSOAFHTE'
            ApplicationUnderTest uICUsersUserDocumentsVWindow = ApplicationUnderTest.Launch(this.RecordedMethod1Params.UICUsersUserDocumentsVWindowExePath, this.RecordedMethod1Params.UICUsersUserDocumentsVWindowAlternateExePath, "15 ..\\..\\..\\dictionary.txt AOHUINHRTSOAFHTE");

            // Click '+2' button
            Mouse.Click(uIItem2Button, new Point(16, 18));

            // Type 'player1' in 'PlayerNameTextBox' text box
            uIPlayerNameTextBoxEdit.Text = this.RecordedMethod1Params.UIPlayerNameTextBoxEditText;

            // Click 'Play' button
            Mouse.Click(uIPlayButton, new Point(138, 17));

            // Click 'Disconnect' button
            Mouse.Click(uIDisconnectButton, new Point(44, 15));

            // Click 'Play' button
            Mouse.Click(uIPlayButton, new Point(120, 17));

            // Type 'player2' in 'PlayerNameTextBox' text box
            uIPlayerNameTextBoxEdit1.Text = this.RecordedMethod1Params.UIPlayerNameTextBoxEditText1;

            // Type '{Enter}' in 'PlayerNameTextBox' text box
            Keyboard.SendKeys(uIPlayerNameTextBoxEdit1, this.RecordedMethod1Params.UIPlayerNameTextBoxEditSendKeys, ModifierKeys.None);

            // Type 'ethos' in 'GuessWordTextBox' text box
            uIGuessWordTextBoxEdit.Text = this.RecordedMethod1Params.UIGuessWordTextBoxEditText;

            // Type '{Enter}' in 'GuessWordTextBox' text box
            Keyboard.SendKeys(uIGuessWordTextBoxEdit, this.RecordedMethod1Params.UIGuessWordTextBoxEditSendKeys, ModifierKeys.None);

            // Type 'lkj' in 'GuessWordTextBox' text box
            uIGuessWordTextBoxEdit.Text = this.RecordedMethod1Params.UIGuessWordTextBoxEditText1;

            // Type '{Enter}' in 'GuessWordTextBox' text box
            Keyboard.SendKeys(uIGuessWordTextBoxEdit, this.RecordedMethod1Params.UIGuessWordTextBoxEditSendKeys1, ModifierKeys.None);

            // Type 'ethos' in 'GuessWordTextBox' text box
            uIGuessWordTextBoxEdit.Text = this.RecordedMethod1Params.UIGuessWordTextBoxEditText2;

            // Type '{Enter}' in 'GuessWordTextBox' text box
            Keyboard.SendKeys(uIGuessWordTextBoxEdit, this.RecordedMethod1Params.UIGuessWordTextBoxEditSendKeys2, ModifierKeys.None);

            // Type 'horas' in 'GuessWordTextBox' text box
            uIGuessWordTextBoxEdit.Text = this.RecordedMethod1Params.UIGuessWordTextBoxEditText3;

            // Type '{Enter}' in 'GuessWordTextBox' text box
            Keyboard.SendKeys(uIGuessWordTextBoxEdit, this.RecordedMethod1Params.UIGuessWordTextBoxEditSendKeys3, ModifierKeys.None);

            // Type 'ethos' in 'GuessWordTextBox' text box
            uIGuessWordTextBoxEdit1.Text = this.RecordedMethod1Params.UIGuessWordTextBoxEditText4;

            // Type '{Enter}' in 'GuessWordTextBox' text box
            Keyboard.SendKeys(uIGuessWordTextBoxEdit1, this.RecordedMethod1Params.UIGuessWordTextBoxEditSendKeys4, ModifierKeys.None);

            // Type 'horas' in 'GuessWordTextBox' text box
            uIGuessWordTextBoxEdit1.Text = this.RecordedMethod1Params.UIGuessWordTextBoxEditText5;

            // Type '{Enter}' in 'GuessWordTextBox' text box
            Keyboard.SendKeys(uIGuessWordTextBoxEdit1, this.RecordedMethod1Params.UIGuessWordTextBoxEditSendKeys5, ModifierKeys.None);

            // Type 'hora' in 'GuessWordTextBox' text box
            uIGuessWordTextBoxEdit1.Text = this.RecordedMethod1Params.UIGuessWordTextBoxEditText6;

            // Type 'h' in 'MyLegalWordTextBox' text box
            Keyboard.SendKeys(uIMyLegalWordTextBoxEdit, this.RecordedMethod1Params.UIMyLegalWordTextBoxEditSendKeys, ModifierKeys.None);

            // Click 'Welcome Screen' button
            Mouse.Click(uIWelcomeScreenButton, new Point(78, 13));

            // Click 'Welcome Screen' button
            Mouse.Click(uIWelcomeScreenButton1, new Point(114, 4));

            // Click 'Play' button
            Mouse.Click(uIPlayButton, new Point(156, 17));

            // Click 'Play' button
            Mouse.Click(uIPlayButton1, new Point(84, 16));

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(27, 11));

            // Click '+1' button
            Mouse.Click(uIItem1Button, new Point(30, 12));

            // Type 'p1' in 'PlayerNameTextBox' text box
            uIPlayerNameTextBoxEdit.Text = this.RecordedMethod1Params.UIPlayerNameTextBoxEditText2;

            // Click 'Play' button
            Mouse.Click(uIPlayButton, new Point(144, 14));

            // Click 'Welcome Screen' button
            Mouse.Click(uIWelcomeScreenButton1, new Point(40, 8));

            // Click 'Play' button
            Mouse.Click(uIPlayButton1, new Point(118, 21));

            // Click 'Close' button
            Mouse.Click(uICloseButton1, new Point(17, 13));

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(34, 14));

            // Click 'Welcome Screen' button
            Mouse.Click(uIWelcomeScreenButton1, new Point(88, 13));

            // Click 'Play' button
            Mouse.Click(uIPlayButton1, new Point(165, 17));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(68, 15));

            // Click 'Close' button
            Mouse.Click(uICloseButton2, new Point(20, 11));
        }
        
        #region Properties
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public UICUsersUserDocumentsVWindow UICUsersUserDocumentsVWindow
        {
            get
            {
                if ((this.mUICUsersUserDocumentsVWindow == null))
                {
                    this.mUICUsersUserDocumentsVWindow = new UICUsersUserDocumentsVWindow();
                }
                return this.mUICUsersUserDocumentsVWindow;
            }
        }
        
        public UIClientSpawnerWindow UIClientSpawnerWindow
        {
            get
            {
                if ((this.mUIClientSpawnerWindow == null))
                {
                    this.mUIClientSpawnerWindow = new UIClientSpawnerWindow();
                }
                return this.mUIClientSpawnerWindow;
            }
        }
        
        public UIBoggleWindow UIBoggleWindow
        {
            get
            {
                if ((this.mUIBoggleWindow == null))
                {
                    this.mUIBoggleWindow = new UIBoggleWindow();
                }
                return this.mUIBoggleWindow;
            }
        }
        
        public UIBoggleWindow1 UIBoggleWindow1
        {
            get
            {
                if ((this.mUIBoggleWindow1 == null))
                {
                    this.mUIBoggleWindow1 = new UIBoggleWindow1();
                }
                return this.mUIBoggleWindow1;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow();
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private UICUsersUserDocumentsVWindow mUICUsersUserDocumentsVWindow;
        
        private UIClientSpawnerWindow mUIClientSpawnerWindow;
        
        private UIBoggleWindow mUIBoggleWindow;
        
        private UIBoggleWindow1 mUIBoggleWindow1;
        
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Launch '%VisualStudioDir%\Projects\PS9\ClientSpawner\bin\Debug\PS8.exe' with arguments '15 ..\..\..\dictionary.txt AOHUINHRTSOAFHTE'
        /// </summary>
        public string UICUsersUserDocumentsVWindowExePath = "C:\\Users\\User\\Documents\\Visual Studio 2012\\Projects\\PS9\\ClientSpawner\\bin\\Debug\\P" +
            "S8.exe";
        
        /// <summary>
        /// Launch '%VisualStudioDir%\Projects\PS9\ClientSpawner\bin\Debug\PS8.exe' with arguments '15 ..\..\..\dictionary.txt AOHUINHRTSOAFHTE'
        /// </summary>
        public string UICUsersUserDocumentsVWindowAlternateExePath = "%VisualStudioDir%\\Projects\\PS9\\ClientSpawner\\bin\\Debug\\PS8.exe";
        
        /// <summary>
        /// Type 'player1' in 'PlayerNameTextBox' text box
        /// </summary>
        public string UIPlayerNameTextBoxEditText = "player1";
        
        /// <summary>
        /// Type 'player2' in 'PlayerNameTextBox' text box
        /// </summary>
        public string UIPlayerNameTextBoxEditText1 = "player2";
        
        /// <summary>
        /// Type '{Enter}' in 'PlayerNameTextBox' text box
        /// </summary>
        public string UIPlayerNameTextBoxEditSendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'ethos' in 'GuessWordTextBox' text box
        /// </summary>
        public string UIGuessWordTextBoxEditText = "ethos";
        
        /// <summary>
        /// Type '{Enter}' in 'GuessWordTextBox' text box
        /// </summary>
        public string UIGuessWordTextBoxEditSendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'lkj' in 'GuessWordTextBox' text box
        /// </summary>
        public string UIGuessWordTextBoxEditText1 = "lkj";
        
        /// <summary>
        /// Type '{Enter}' in 'GuessWordTextBox' text box
        /// </summary>
        public string UIGuessWordTextBoxEditSendKeys1 = "{Enter}";
        
        /// <summary>
        /// Type 'ethos' in 'GuessWordTextBox' text box
        /// </summary>
        public string UIGuessWordTextBoxEditText2 = "ethos";
        
        /// <summary>
        /// Type '{Enter}' in 'GuessWordTextBox' text box
        /// </summary>
        public string UIGuessWordTextBoxEditSendKeys2 = "{Enter}";
        
        /// <summary>
        /// Type 'horas' in 'GuessWordTextBox' text box
        /// </summary>
        public string UIGuessWordTextBoxEditText3 = "horas";
        
        /// <summary>
        /// Type '{Enter}' in 'GuessWordTextBox' text box
        /// </summary>
        public string UIGuessWordTextBoxEditSendKeys3 = "{Enter}";
        
        /// <summary>
        /// Type 'ethos' in 'GuessWordTextBox' text box
        /// </summary>
        public string UIGuessWordTextBoxEditText4 = "ethos";
        
        /// <summary>
        /// Type '{Enter}' in 'GuessWordTextBox' text box
        /// </summary>
        public string UIGuessWordTextBoxEditSendKeys4 = "{Enter}";
        
        /// <summary>
        /// Type 'horas' in 'GuessWordTextBox' text box
        /// </summary>
        public string UIGuessWordTextBoxEditText5 = "horas";
        
        /// <summary>
        /// Type '{Enter}' in 'GuessWordTextBox' text box
        /// </summary>
        public string UIGuessWordTextBoxEditSendKeys5 = "{Enter}";
        
        /// <summary>
        /// Type 'hora' in 'GuessWordTextBox' text box
        /// </summary>
        public string UIGuessWordTextBoxEditText6 = "hora";
        
        /// <summary>
        /// Type 'h' in 'MyLegalWordTextBox' text box
        /// </summary>
        public string UIMyLegalWordTextBoxEditSendKeys = "h";
        
        /// <summary>
        /// Type 'p1' in 'PlayerNameTextBox' text box
        /// </summary>
        public string UIPlayerNameTextBoxEditText2 = "p1";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICUsersUserDocumentsVWindow : WinWindow
    {
        
        public UICUsersUserDocumentsVWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "C:\\Users\\User\\Documents\\Visual Studio 2012\\Projects\\PS9\\ClientSpawner\\bin\\Debug\\P" +
                "S8.exe";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "ConsoleWindowClass";
            this.WindowTitles.Add("C:\\Users\\User\\Documents\\Visual Studio 2012\\Projects\\PS9\\ClientSpawner\\bin\\Debug\\P" +
                    "S8.exe");
            #endregion
        }
        
        #region Properties
        public UICUsersUserDocumentsVTitleBar UICUsersUserDocumentsVTitleBar
        {
            get
            {
                if ((this.mUICUsersUserDocumentsVTitleBar == null))
                {
                    this.mUICUsersUserDocumentsVTitleBar = new UICUsersUserDocumentsVTitleBar(this);
                }
                return this.mUICUsersUserDocumentsVTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UICUsersUserDocumentsVTitleBar mUICUsersUserDocumentsVTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICUsersUserDocumentsVTitleBar : WinTitleBar
    {
        
        public UICUsersUserDocumentsVTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("C:\\Users\\User\\Documents\\Visual Studio 2012\\Projects\\PS9\\ClientSpawner\\bin\\Debug\\P" +
                    "S8.exe");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("C:\\Users\\User\\Documents\\Visual Studio 2012\\Projects\\PS9\\ClientSpawner\\bin\\Debug\\P" +
                            "S8.exe");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIClientSpawnerWindow : WinWindow
    {
        
        public UIClientSpawnerWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Client Spawner";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Client Spawner");
            #endregion
        }
        
        #region Properties
        public UIItem2Window UIItem2Window
        {
            get
            {
                if ((this.mUIItem2Window == null))
                {
                    this.mUIItem2Window = new UIItem2Window(this);
                }
                return this.mUIItem2Window;
            }
        }
        
        public UIItem1Window UIItem1Window
        {
            get
            {
                if ((this.mUIItem1Window == null))
                {
                    this.mUIItem1Window = new UIItem1Window(this);
                }
                return this.mUIItem1Window;
            }
        }
        
        public UIClientSpawnerTitleBar UIClientSpawnerTitleBar
        {
            get
            {
                if ((this.mUIClientSpawnerTitleBar == null))
                {
                    this.mUIClientSpawnerTitleBar = new UIClientSpawnerTitleBar(this);
                }
                return this.mUIClientSpawnerTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIItem2Window mUIItem2Window;
        
        private UIItem1Window mUIItem1Window;
        
        private UIClientSpawnerTitleBar mUIClientSpawnerTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIItem2Window : WinWindow
    {
        
        public UIItem2Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button2";
            this.WindowTitles.Add("Client Spawner");
            #endregion
        }
        
        #region Properties
        public WinButton UIItem2Button
        {
            get
            {
                if ((this.mUIItem2Button == null))
                {
                    this.mUIItem2Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem2Button.SearchProperties[WinButton.PropertyNames.Name] = "+2";
                    this.mUIItem2Button.WindowTitles.Add("Client Spawner");
                    #endregion
                }
                return this.mUIItem2Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItem2Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIItem1Window : WinWindow
    {
        
        public UIItem1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button1";
            this.WindowTitles.Add("Client Spawner");
            #endregion
        }
        
        #region Properties
        public WinButton UIItem1Button
        {
            get
            {
                if ((this.mUIItem1Button == null))
                {
                    this.mUIItem1Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem1Button.SearchProperties[WinButton.PropertyNames.Name] = "+1";
                    this.mUIItem1Button.WindowTitles.Add("Client Spawner");
                    #endregion
                }
                return this.mUIItem1Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItem1Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIClientSpawnerTitleBar : WinTitleBar
    {
        
        public UIClientSpawnerTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Client Spawner");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Client Spawner");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIBoggleWindow : WinWindow
    {
        
        public UIBoggleWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Boggle!";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.FilterProperties[WinWindow.PropertyNames.OrderOfInvocation] = "2";
            this.WindowTitles.Add("Boggle!");
            #endregion
        }
        
        #region Properties
        public UIPlayerNameTextBoxWindow UIPlayerNameTextBoxWindow
        {
            get
            {
                if ((this.mUIPlayerNameTextBoxWindow == null))
                {
                    this.mUIPlayerNameTextBoxWindow = new UIPlayerNameTextBoxWindow(this);
                }
                return this.mUIPlayerNameTextBoxWindow;
            }
        }
        
        public UIPlayWindow UIPlayWindow
        {
            get
            {
                if ((this.mUIPlayWindow == null))
                {
                    this.mUIPlayWindow = new UIPlayWindow(this);
                }
                return this.mUIPlayWindow;
            }
        }
        
        public UIDisconnectWindow UIDisconnectWindow
        {
            get
            {
                if ((this.mUIDisconnectWindow == null))
                {
                    this.mUIDisconnectWindow = new UIDisconnectWindow(this);
                }
                return this.mUIDisconnectWindow;
            }
        }
        
        public UIGuessWordTextBoxWindow UIGuessWordTextBoxWindow
        {
            get
            {
                if ((this.mUIGuessWordTextBoxWindow == null))
                {
                    this.mUIGuessWordTextBoxWindow = new UIGuessWordTextBoxWindow(this);
                }
                return this.mUIGuessWordTextBoxWindow;
            }
        }
        
        public UIWelcomeScreenWindow UIWelcomeScreenWindow
        {
            get
            {
                if ((this.mUIWelcomeScreenWindow == null))
                {
                    this.mUIWelcomeScreenWindow = new UIWelcomeScreenWindow(this);
                }
                return this.mUIWelcomeScreenWindow;
            }
        }
        
        public UIBoggleTitleBar UIBoggleTitleBar
        {
            get
            {
                if ((this.mUIBoggleTitleBar == null))
                {
                    this.mUIBoggleTitleBar = new UIBoggleTitleBar(this);
                }
                return this.mUIBoggleTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIPlayerNameTextBoxWindow mUIPlayerNameTextBoxWindow;
        
        private UIPlayWindow mUIPlayWindow;
        
        private UIDisconnectWindow mUIDisconnectWindow;
        
        private UIGuessWordTextBoxWindow mUIGuessWordTextBoxWindow;
        
        private UIWelcomeScreenWindow mUIWelcomeScreenWindow;
        
        private UIBoggleTitleBar mUIBoggleTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIPlayerNameTextBoxWindow : WinWindow
    {
        
        public UIPlayerNameTextBoxWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "PlayerNameTextBox";
            this.WindowTitles.Add("Boggle!");
            #endregion
        }
        
        #region Properties
        public WinEdit UIPlayerNameTextBoxEdit
        {
            get
            {
                if ((this.mUIPlayerNameTextBoxEdit == null))
                {
                    this.mUIPlayerNameTextBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIPlayerNameTextBoxEdit.WindowTitles.Add("Boggle!");
                    #endregion
                }
                return this.mUIPlayerNameTextBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIPlayerNameTextBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIPlayWindow : WinWindow
    {
        
        public UIPlayWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "PlayConnectButton";
            this.WindowTitles.Add("Boggle!");
            #endregion
        }
        
        #region Properties
        public WinButton UIPlayButton
        {
            get
            {
                if ((this.mUIPlayButton == null))
                {
                    this.mUIPlayButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIPlayButton.SearchProperties[WinButton.PropertyNames.Name] = "Play";
                    this.mUIPlayButton.WindowTitles.Add("Boggle!");
                    #endregion
                }
                return this.mUIPlayButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIPlayButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIDisconnectWindow : WinWindow
    {
        
        public UIDisconnectWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "welcomeDisconnectFromServerButton";
            this.WindowTitles.Add("Boggle!");
            #endregion
        }
        
        #region Properties
        public WinButton UIDisconnectButton
        {
            get
            {
                if ((this.mUIDisconnectButton == null))
                {
                    this.mUIDisconnectButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIDisconnectButton.SearchProperties[WinButton.PropertyNames.Name] = "Disconnect";
                    this.mUIDisconnectButton.WindowTitles.Add("Boggle!");
                    #endregion
                }
                return this.mUIDisconnectButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIDisconnectButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIGuessWordTextBoxWindow : WinWindow
    {
        
        public UIGuessWordTextBoxWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "GuessWordTextBox";
            this.WindowTitles.Add("Boggle!");
            #endregion
        }
        
        #region Properties
        public WinEdit UIGuessWordTextBoxEdit
        {
            get
            {
                if ((this.mUIGuessWordTextBoxEdit == null))
                {
                    this.mUIGuessWordTextBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIGuessWordTextBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "BOGGLE!";
                    this.mUIGuessWordTextBoxEdit.WindowTitles.Add("Boggle!");
                    #endregion
                }
                return this.mUIGuessWordTextBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIGuessWordTextBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIWelcomeScreenWindow : WinWindow
    {
        
        public UIWelcomeScreenWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "returnToWelcomeScreenButton";
            this.WindowTitles.Add("Boggle!");
            #endregion
        }
        
        #region Properties
        public WinButton UIWelcomeScreenButton
        {
            get
            {
                if ((this.mUIWelcomeScreenButton == null))
                {
                    this.mUIWelcomeScreenButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIWelcomeScreenButton.SearchProperties[WinButton.PropertyNames.Name] = "Welcome Screen";
                    this.mUIWelcomeScreenButton.WindowTitles.Add("Boggle!");
                    #endregion
                }
                return this.mUIWelcomeScreenButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIWelcomeScreenButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIBoggleTitleBar : WinTitleBar
    {
        
        public UIBoggleTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Boggle!");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Boggle!");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIBoggleWindow1 : WinWindow
    {
        
        public UIBoggleWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Boggle!";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Boggle!");
            #endregion
        }
        
        #region Properties
        public UIPlayerNameTextBoxWindow1 UIPlayerNameTextBoxWindow
        {
            get
            {
                if ((this.mUIPlayerNameTextBoxWindow == null))
                {
                    this.mUIPlayerNameTextBoxWindow = new UIPlayerNameTextBoxWindow1(this);
                }
                return this.mUIPlayerNameTextBoxWindow;
            }
        }
        
        public UIGuessWordTextBoxWindow1 UIGuessWordTextBoxWindow
        {
            get
            {
                if ((this.mUIGuessWordTextBoxWindow == null))
                {
                    this.mUIGuessWordTextBoxWindow = new UIGuessWordTextBoxWindow1(this);
                }
                return this.mUIGuessWordTextBoxWindow;
            }
        }
        
        public UIMyLegalWordTextBoxWindow UIMyLegalWordTextBoxWindow
        {
            get
            {
                if ((this.mUIMyLegalWordTextBoxWindow == null))
                {
                    this.mUIMyLegalWordTextBoxWindow = new UIMyLegalWordTextBoxWindow(this);
                }
                return this.mUIMyLegalWordTextBoxWindow;
            }
        }
        
        public UIWelcomeScreenWindow1 UIWelcomeScreenWindow
        {
            get
            {
                if ((this.mUIWelcomeScreenWindow == null))
                {
                    this.mUIWelcomeScreenWindow = new UIWelcomeScreenWindow1(this);
                }
                return this.mUIWelcomeScreenWindow;
            }
        }
        
        public UIPlayWindow1 UIPlayWindow
        {
            get
            {
                if ((this.mUIPlayWindow == null))
                {
                    this.mUIPlayWindow = new UIPlayWindow1(this);
                }
                return this.mUIPlayWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIPlayerNameTextBoxWindow1 mUIPlayerNameTextBoxWindow;
        
        private UIGuessWordTextBoxWindow1 mUIGuessWordTextBoxWindow;
        
        private UIMyLegalWordTextBoxWindow mUIMyLegalWordTextBoxWindow;
        
        private UIWelcomeScreenWindow1 mUIWelcomeScreenWindow;
        
        private UIPlayWindow1 mUIPlayWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIPlayerNameTextBoxWindow1 : WinWindow
    {
        
        public UIPlayerNameTextBoxWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "PlayerNameTextBox";
            this.WindowTitles.Add("Boggle!");
            #endregion
        }
        
        #region Properties
        public WinEdit UIPlayerNameTextBoxEdit
        {
            get
            {
                if ((this.mUIPlayerNameTextBoxEdit == null))
                {
                    this.mUIPlayerNameTextBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIPlayerNameTextBoxEdit.WindowTitles.Add("Boggle!");
                    #endregion
                }
                return this.mUIPlayerNameTextBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIPlayerNameTextBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIGuessWordTextBoxWindow1 : WinWindow
    {
        
        public UIGuessWordTextBoxWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "GuessWordTextBox";
            this.WindowTitles.Add("Boggle!");
            #endregion
        }
        
        #region Properties
        public WinEdit UIGuessWordTextBoxEdit
        {
            get
            {
                if ((this.mUIGuessWordTextBoxEdit == null))
                {
                    this.mUIGuessWordTextBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIGuessWordTextBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "BOGGLE!";
                    this.mUIGuessWordTextBoxEdit.WindowTitles.Add("Boggle!");
                    #endregion
                }
                return this.mUIGuessWordTextBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIGuessWordTextBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIMyLegalWordTextBoxWindow : WinWindow
    {
        
        public UIMyLegalWordTextBoxWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "MyLegalWordTextBox";
            this.WindowTitles.Add("Boggle!");
            #endregion
        }
        
        #region Properties
        public WinEdit UIMyLegalWordTextBoxEdit
        {
            get
            {
                if ((this.mUIMyLegalWordTextBoxEdit == null))
                {
                    this.mUIMyLegalWordTextBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIMyLegalWordTextBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "-(points)";
                    this.mUIMyLegalWordTextBoxEdit.WindowTitles.Add("Boggle!");
                    #endregion
                }
                return this.mUIMyLegalWordTextBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIMyLegalWordTextBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIWelcomeScreenWindow1 : WinWindow
    {
        
        public UIWelcomeScreenWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "returnToWelcomeScreenButton";
            this.WindowTitles.Add("Boggle!");
            #endregion
        }
        
        #region Properties
        public WinButton UIWelcomeScreenButton
        {
            get
            {
                if ((this.mUIWelcomeScreenButton == null))
                {
                    this.mUIWelcomeScreenButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIWelcomeScreenButton.SearchProperties[WinButton.PropertyNames.Name] = "Welcome Screen";
                    this.mUIWelcomeScreenButton.WindowTitles.Add("Boggle!");
                    #endregion
                }
                return this.mUIWelcomeScreenButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIWelcomeScreenButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIPlayWindow1 : WinWindow
    {
        
        public UIPlayWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "PlayConnectButton";
            this.WindowTitles.Add("Boggle!");
            #endregion
        }
        
        #region Properties
        public WinButton UIPlayButton
        {
            get
            {
                if ((this.mUIPlayButton == null))
                {
                    this.mUIPlayButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIPlayButton.SearchProperties[WinButton.PropertyNames.Name] = "Play";
                    this.mUIPlayButton.WindowTitles.Add("Boggle!");
                    #endregion
                }
                return this.mUIPlayButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIPlayButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "OK";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Button";
            this.WindowTitles.Add("OK");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("OK");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
}
